Index: ../Django_autoservisas/mysite/mysite/urls.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"\"\"mysite URL Configuration\r\n\r\nThe `urlpatterns` list routes URLs to views. For more information please see:\r\n    https://docs.djangoproject.com/en/4.1/topics/http/urls/\r\nExamples:\r\nFunction views\r\n    1. Add an import:  from my_app import views\r\n    2. Add a URL to urlpatterns:  path('', views.home, name='home')\r\nClass-based views\r\n    1. Add an import:  from other_app.views import Home\r\n    2. Add a URL to urlpatterns:  path('', Home.as_view(), name='home')\r\nIncluding another URLconf\r\n    1. Import the include() function: from django.urls import include, path\r\n    2. Add a URL to urlpatterns:  path('blog/', include('blog.urls'))\r\n\"\"\"\r\nfrom django.contrib import admin\r\nfrom django.urls import include, path\r\n\r\nurlpatterns = [\r\n    path('admin/', admin.site.urls),\r\n    path('library/', include('library.urls')),\r\n]\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Django_autoservisas/mysite/mysite/urls.py b/../Django_autoservisas/mysite/mysite/urls.py
--- a/../Django_autoservisas/mysite/mysite/urls.py	(revision 0054d3196703e4e9b68e9cbc4ebdf6c12145e2cb)
+++ b/../Django_autoservisas/mysite/mysite/urls.py	(date 1673961224281)
@@ -18,5 +18,5 @@
 
 urlpatterns = [
     path('admin/', admin.site.urls),
-    path('library/', include('library.urls')),
+    path('motoservice/', include('motoservice.urls')),
 ]
Index: ../.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../.gitignore b/../.gitignore
new file mode 100644
--- /dev/null	(date 1673961125691)
+++ b/../.gitignore	(date 1673961125691)
@@ -0,0 +1,172 @@
+/Biudzetas/
+/paskaita8_1214/
+/Duomenu_baze/.idea/.gitignore
+/Flask_0102/.idea/.gitignore
+/Mokymas_(uzduotis3)/.idea/.gitignore
+/paskaita2_1206/.idea/.gitignore
+/Paskaita3_1207/.idea/.gitignore
+/paskaita4/.idea/.gitignore
+/paskaita6 1212/.idea/.gitignore
+/paskaita7_1213/.idea/.gitignore
+/paskaita9_1216/.idea/.gitignore
+/paskaita11_1219/.idea/.gitignore
+/paskaita12/.idea/.gitignore
+/paskaita13_1221/.idea/.gitignore
+/Paskaita14_1222/.idea/.gitignore
+/pirma_paskaita_1205/.idea/.gitignore
+/Tankai/.idea/.gitignore
+/testas_pries_testa/.idea/.gitignore
+/pirma_paskaita_1205/.idea/.name
+/Django_autoservisas/mysite/library/migrations/0001_initial.py
+/Django_autoservisas/mysite/library/migrations/0002_alter_paslauga_kaina.py
+/Django_autoservisas/mysite/library/migrations/__init__.py
+/Django_autoservisas/mysite/library/__init__.py
+/Django_autoservisas/mysite/library/admin.py
+/Django_autoservisas/mysite/library/apps.py
+/Duomenu_baze/automobiliai2.db
+/paskaita6 1212/bandymas1.txt
+/paskaita6 1212/bandymas2.txt
+/Duomenu_baze/DB_Python_uzduotis.py
+/paskaita13_1221/dog.jpg
+/paskaita13_1221/dog_modified.jpg
+/Duomenu_baze/.idea/Duomenu_baze.iml
+/failas2.txt
+/Flask_0102/.idea/Flask_0102.iml
+/testas_pries_testa/funkcija.py
+/paskaita13_1221/logo_uzdejimui/IMG_20221129_114631.jpg
+/paskaita13_1221/logo_uzdejimui/IMG_20221129_120324.jpg
+/paskaita13_1221/logo_uzdejimui/IMG_20221130_120704.jpg
+/paskaita13_1221/logo_uzdejimui/IMG_20221201_162401.jpg
+/paskaita13_1221/logo_uzdejimui/IMG_20221203_143337.jpg
+/paskaita13_1221/logo_uzdejimui/IMG_20221203_143513.jpg
+/Mokymas_(uzduotis3)/modules/kursas.py
+/paskaita13_1221/logo.png
+/paskaita13_1221/logo_cropped.png
+/Mokymas_(uzduotis3)/main.py
+/pirma_paskaita_1205/main.py
+/Duomenu_baze/.idea/misc.xml
+/Flask_0102/.idea/misc.xml
+/Mokymas_(uzduotis3)/.idea/misc.xml
+/paskaita2_1206/.idea/misc.xml
+/Paskaita3_1207/.idea/misc.xml
+/paskaita4/.idea/misc.xml
+/paskaita6 1212/.idea/misc.xml
+/paskaita7_1213/.idea/misc.xml
+/paskaita9_1216/.idea/misc.xml
+/paskaita11_1219/.idea/misc.xml
+/paskaita12/.idea/misc.xml
+/paskaita13_1221/.idea/misc.xml
+/Paskaita14_1222/.idea/misc.xml
+/pirma_paskaita_1205/.idea/misc.xml
+/Tankai/.idea/misc.xml
+/testas_pries_testa/.idea/misc.xml
+/Django_autoservisas/mysite/library/models.py
+/Duomenu_baze/.idea/modules.xml
+/Flask_0102/.idea/modules.xml
+/Mokymas_(uzduotis3)/.idea/modules.xml
+/paskaita2_1206/.idea/modules.xml
+/Paskaita3_1207/.idea/modules.xml
+/paskaita4/.idea/modules.xml
+/paskaita6 1212/.idea/modules.xml
+/paskaita7_1213/.idea/modules.xml
+/paskaita9_1216/.idea/modules.xml
+/paskaita11_1219/.idea/modules.xml
+/paskaita12/.idea/modules.xml
+/paskaita13_1221/.idea/modules.xml
+/Paskaita14_1222/.idea/modules.xml
+/pirma_paskaita_1205/.idea/modules.xml
+/Tankai/.idea/modules.xml
+/testas_pries_testa/.idea/modules.xml
+/paskaita9_1216/modulis.py
+/Mokymas_(uzduotis3)/.idea/Mokymas_(uzduotis3).iml
+/paskaita13_1221/new_logo.png
+/pirma_paskaita_1205/.idea/paskaita1_1205.iml
+/paskaita2_1206/.idea/paskaita2_1206.iml
+/Paskaita3_1207/.idea/Paskaita3_1207.iml
+/paskaita4/.idea/paskaita4.iml
+/paskaita6 1212/.idea/paskaita6 1212.iml
+/paskaita7_1213/.idea/paskaita7_1213.iml
+/paskaita9_1216/.idea/paskaita9_1216.iml
+/paskaita11_1219/.idea/paskaita11_1219.iml
+/paskaita12/.idea/paskaita12.iml
+/paskaita13_1221/.idea/paskaita13_1221.iml
+/Paskaita14_1222/.idea/Paskaita14_1222.iml
+/Duomenu_baze/.idea/inspectionProfiles/profiles_settings.xml
+/Flask_0102/.idea/inspectionProfiles/profiles_settings.xml
+/Mokymas_(uzduotis3)/.idea/inspectionProfiles/profiles_settings.xml
+/paskaita2_1206/.idea/inspectionProfiles/profiles_settings.xml
+/Paskaita3_1207/.idea/inspectionProfiles/profiles_settings.xml
+/paskaita4/.idea/inspectionProfiles/profiles_settings.xml
+/paskaita6 1212/.idea/inspectionProfiles/profiles_settings.xml
+/paskaita7_1213/.idea/inspectionProfiles/profiles_settings.xml
+/paskaita9_1216/.idea/inspectionProfiles/profiles_settings.xml
+/paskaita11_1219/.idea/inspectionProfiles/profiles_settings.xml
+/paskaita12/.idea/inspectionProfiles/profiles_settings.xml
+/paskaita13_1221/.idea/inspectionProfiles/profiles_settings.xml
+/Paskaita14_1222/.idea/inspectionProfiles/profiles_settings.xml
+/pirma_paskaita_1205/.idea/inspectionProfiles/profiles_settings.xml
+/Tankai/.idea/inspectionProfiles/profiles_settings.xml
+/testas_pries_testa/.idea/inspectionProfiles/profiles_settings.xml
+/Duomenu_baze/.idea/inspectionProfiles/Project_Default.xml
+/Flask_0102/.idea/inspectionProfiles/Project_Default.xml
+/Mokymas_(uzduotis3)/.idea/inspectionProfiles/Project_Default.xml
+/paskaita2_1206/.idea/inspectionProfiles/Project_Default.xml
+/Paskaita3_1207/.idea/inspectionProfiles/Project_Default.xml
+/paskaita4/.idea/inspectionProfiles/Project_Default.xml
+/paskaita6 1212/.idea/inspectionProfiles/Project_Default.xml
+/paskaita7_1213/.idea/inspectionProfiles/Project_Default.xml
+/paskaita9_1216/.idea/inspectionProfiles/Project_Default.xml
+/paskaita11_1219/.idea/inspectionProfiles/Project_Default.xml
+/paskaita12/.idea/inspectionProfiles/Project_Default.xml
+/paskaita13_1221/.idea/inspectionProfiles/Project_Default.xml
+/Paskaita14_1222/.idea/inspectionProfiles/Project_Default.xml
+/Tankai/.idea/inspectionProfiles/Project_Default.xml
+/testas_pries_testa/.idea/inspectionProfiles/Project_Default.xml
+/Mokymas_(uzduotis3)/modules/python_kursas.py
+/Tankai/README.md
+/Tankai/.idea/Tankai.iml
+/paskaita6 1212/Tekstas.txt
+/paskaita6 1212/Tekstas DIDELES.txt
+/paskaita13_1221/tenerife2.png
+/paskaita13_1221/tenerife_logo.jpg
+/Tankai/test.py
+/testas_pries_testa/testas.py
+/testas_pries_testa/.idea/testas_pries_testa.iml
+/paskaita4/testinis.py
+/Django_autoservisas/mysite/library/tests.py
+/Paskaita3_1207/Uzduotis1.py
+/paskaita2_1206/uzduotis1.py
+/paskaita4/uzduotis1.py
+/paskaita6 1212/uzduotis1.py
+/paskaita7_1213/uzduotis1.py
+/paskaita9_1216/uzduotis1.py
+/pirma_paskaita_1205/uzduotis1.py
+/paskaita2_1206/uzduotis2.py
+/Paskaita3_1207/uzduotis2.py
+/paskaita4/uzduotis2.py
+/paskaita6 1212/uzduotis2.py
+/paskaita7_1213/uzduotis2.py
+/paskaita9_1216/uzduotis2.py
+/pirma_paskaita_1205/uzduotis2.py
+/paskaita2_1206/uzduotis3.py
+/Paskaita3_1207/uzduotis3.py
+/paskaita6 1212/uzduotis3.py
+/paskaita13_1221/uzduotis3.py
+/pirma_paskaita_1205/uzduotis3.py
+/paskaita7_1213/uzduotis3_1.py
+/paskaita7_1213/uzduotis3_2.py
+/paskaita2_1206/uzduotis4.py
+/Paskaita3_1207/uzduotis4.py
+/pirma_paskaita_1205/uzduotis4.py
+/paskaita2_1206/uzduotis4_2.py
+/Paskaita3_1207/uzduotis5.py
+/pirma_paskaita_1205/uzduotis5.py
+/Duomenu_baze/.idea/vcs.xml
+/Flask_0102/.idea/vcs.xml
+/paskaita11_1219/.idea/vcs.xml
+/paskaita12/.idea/vcs.xml
+/paskaita13_1221/.idea/vcs.xml
+/Paskaita14_1222/.idea/vcs.xml
+/Tankai/.idea/vcs.xml
+/testas_pries_testa/.idea/vcs.xml
+/Django_autoservisas/mysite/library/views.py
Index: .idea/inspectionProfiles/Project_Default.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/inspectionProfiles/Project_Default.xml b/.idea/inspectionProfiles/Project_Default.xml
new file mode 100644
--- /dev/null	(date 1675680298063)
+++ b/.idea/inspectionProfiles/Project_Default.xml	(date 1675680298063)
@@ -0,0 +1,13 @@
+<component name="InspectionProjectProfileManager">
+  <profile version="1.0">
+    <option name="myName" value="Project Default" />
+    <inspection_tool class="PyInterpreterInspection" enabled="false" level="WARNING" enabled_by_default="false" />
+    <inspection_tool class="PyUnresolvedReferencesInspection" enabled="true" level="WARNING" enabled_by_default="true">
+      <option name="ignoredIdentifiers">
+        <list>
+          <option value="str.len" />
+        </list>
+      </option>
+    </inspection_tool>
+  </profile>
+</component>
\ No newline at end of file
Index: .idea/TODOlist.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/TODOlist.iml b/.idea/TODOlist.iml
new file mode 100644
--- /dev/null	(date 1675680298145)
+++ b/.idea/TODOlist.iml	(date 1675680298145)
@@ -0,0 +1,10 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="PYTHON_MODULE" version="4">
+  <component name="NewModuleRootManager">
+    <content url="file://$MODULE_DIR$">
+      <excludeFolder url="file://$MODULE_DIR$/venv" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
Index: .idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/modules.xml b/.idea/modules.xml
new file mode 100644
--- /dev/null	(date 1675680298204)
+++ b/.idea/modules.xml	(date 1675680298204)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/.idea/TODOlist.iml" filepath="$PROJECT_DIR$/.idea/TODOlist.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
new file mode 100644
--- /dev/null	(date 1675680683205)
+++ b/.idea/misc.xml	(date 1675680683205)
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.11 (TODOlist)" project-jdk-type="Python SDK" />
+  <component name="PyCharmProfessionalAdvertiser">
+    <option name="shown" value="true" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/inspectionProfiles/profiles_settings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/inspectionProfiles/profiles_settings.xml b/.idea/inspectionProfiles/profiles_settings.xml
new file mode 100644
--- /dev/null	(date 1675680298311)
+++ b/.idea/inspectionProfiles/profiles_settings.xml	(date 1675680298311)
@@ -0,0 +1,6 @@
+<component name="InspectionProjectProfileManager">
+  <settings>
+    <option name="USE_PROJECT_PROFILE" value="false" />
+    <version value="1.0" />
+  </settings>
+</component>
\ No newline at end of file
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
new file mode 100644
--- /dev/null	(date 1675680298361)
+++ b/.idea/vcs.xml	(date 1675680298361)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$/.." vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: ../Tankai/Uzduotis_TANKAS.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from random import randint\r\nclass Tankas:\r\n    def __init__(self):\r\n        self.x = 0\r\n        self.y = 0\r\n        self.kryptis = 'Š'\r\n        self.suviai = 0\r\n        self.taskai = 100\r\n        self.pataikymai = 0\r\n        self.registras = {'Š': 0, 'P': 0, 'V': 0, 'R': 0}\r\n\r\n    def pirmyn(self):\r\n        self.kryptis = 'Š'\r\n        self.y += 1\r\n        self.taskai -= 10\r\n        return self.y\r\n\r\n    def atgal(self):\r\n        self.kryptis = 'P'\r\n        self.y -= 1\r\n        self.taskai -= 10\r\n        return self.y\r\n\r\n    def kairen(self):\r\n        self.kryptis = 'V'\r\n        self.x -= 1\r\n        self.taskai -= 10\r\n        return self.x\r\n\r\n    def desinen(self):\r\n        self.kryptis = 'R'\r\n        self.x += 1\r\n        self.taskai -= 10\r\n        return self.x\r\n\r\n    def suvis(self):\r\n        self.suviai += 1\r\n        self.registras[self.kryptis] += 1\r\n        return self.suviai, self.registras\r\n\r\n    def info(self):\r\n        print(f'Tanko padėtis x:{self.x} y:{self.y}, kryptis į {self.kryptis} || Bendras šūvių skaičius:'\r\n              f' {self.suviai} - {self.registras}')\r\n        print(f'Taškų likutis {self.taskai}, pataikymai į priešą {self.pataikymai}')\r\n\r\n    def taikinys(self):\r\n        self.x2 = randint(-10, 10)\r\n        self.y2 = randint(-10, 10)\r\n        return self.x2, self.y2\r\n\r\n    def taikinio_ataka(self):\r\n        if self.x == self.x2:\r\n            if self.y2 > self.y and self.kryptis == 'Š':\r\n                return True\r\n            if self.y2 < self.y and self.kryptis == 'P':\r\n                return True\r\n        if self.y == self.y2:\r\n            if self.x2 > self.x and self.kryptis == 'R':\r\n                return True\r\n            if self.x2 < self.x and self.kryptis == 'V':\r\n                return True\r\n        if self.x == self.x2 and self.y == self.y2:\r\n            print(\"Esi per arti taikinio, todėl \", end=\"\")\r\n            return False\r\n\r\n    def pabaiga(self):\r\n        if self.taskai < 0:\r\n            print(\"Deja, baigėsi taškai - žaidimo pabaiga.\")\r\n            return 0\r\n\r\n\r\n\r\ntankas = Tankas()\r\npriesas = tankas.taikinys()\r\n\r\n\r\nwhile True:\r\n    if tankas.pabaiga() == 0:\r\n        break\r\n    print(f\"Taikinio koordinatės x:{priesas[0]} y:{priesas[1]}\")\r\n    tankas.info()\r\n    print()\r\n    match (input('''\"w\" - važiuoti Šiaurės (Š) kryptimi,\r\n\"s\" - važiuoti Pietų (P) kryptimi,\r\n\"a\" - važiuoti Vakarų (V) kryptimi,\r\n\"d\" - važiuoti Rytų (R) kryptimi,\r\n\"f\" - ŠŪVIS!\r\n\"l\" - baigti žaidimą.\r\nJūsų veiksmas:\r\n''')):\r\n        case 'w':\r\n            tankas.pirmyn()\r\n        case 'a':\r\n            tankas.kairen()\r\n        case 's':\r\n            tankas.atgal()\r\n        case 'd':\r\n            tankas.desinen()\r\n        case 'f':\r\n            tankas.suvis()\r\n            if tankas.taikinio_ataka():\r\n                print(\"Pataikei! Sveikinu gauni 50 taškų!\")\r\n                print(\"Sekančio \", end=\"\")\r\n                tankas.pataikymai += 1\r\n                tankas.taskai += 50\r\n                priesas = tankas.taikinys()\r\n            else:\r\n                print(\"Nepataikei... Nusitaikyk iš naujo\")\r\n        case 'l':\r\n            print(\"Žaidimo pabaiga\")\r\n            break\r\n        case _:\r\n            print(\"Klaidinga įvestis. Bandyk dar kartą!\")\r\n\r\n\r\n# Git testas\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Tankai/Uzduotis_TANKAS.py b/../Tankai/Uzduotis_TANKAS.py
--- a/../Tankai/Uzduotis_TANKAS.py	(revision 0054d3196703e4e9b68e9cbc4ebdf6c12145e2cb)
+++ b/../Tankai/Uzduotis_TANKAS.py	(date 1672923936115)
@@ -1,4 +1,6 @@
 from random import randint
+
+
 class Tankas:
     def __init__(self):
         self.x = 0
@@ -39,27 +41,27 @@
         return self.suviai, self.registras
 
     def info(self):
-        print(f'Tanko padėtis x:{self.x} y:{self.y}, kryptis į {self.kryptis} || Bendras šūvių skaičius:'
-              f' {self.suviai} - {self.registras}')
-        print(f'Taškų likutis {self.taskai}, pataikymai į priešą {self.pataikymai}')
+        print(f'Tanko padėtis x:{self.x} y:{self.y}, nusitaikyta {self.kryptis} kryptimi')
+        print(f'Šūvių statistika: viso iššauta - {self.suviai}, pagal kryptis {self.registras}')
+        print(f'Taškų likutis {self.taskai}, sunaikinta taikinių - {self.pataikymai}')
 
     def taikinys(self):
-        self.x2 = randint(-10, 10)
-        self.y2 = randint(-10, 10)
-        return self.x2, self.y2
+        self.prieso_x = randint(-10, 10)
+        self.prieso_y = randint(-10, 10)
+        return self.prieso_x, self.prieso_y
 
     def taikinio_ataka(self):
-        if self.x == self.x2:
-            if self.y2 > self.y and self.kryptis == 'Š':
+        if self.x == self.prieso_x:
+            if self.prieso_y > self.y and self.kryptis == 'Š':
                 return True
-            if self.y2 < self.y and self.kryptis == 'P':
+            if self.prieso_y < self.y and self.kryptis == 'P':
                 return True
-        if self.y == self.y2:
-            if self.x2 > self.x and self.kryptis == 'R':
+        if self.y == self.prieso_y:
+            if self.prieso_x > self.x and self.kryptis == 'R':
                 return True
-            if self.x2 < self.x and self.kryptis == 'V':
+            if self.prieso_x < self.x and self.kryptis == 'V':
                 return True
-        if self.x == self.x2 and self.y == self.y2:
+        if self.x == self.prieso_x and self.y == self.prieso_y:
             print("Esi per arti taikinio, todėl ", end="")
             return False
 
@@ -69,11 +71,9 @@
             return 0
 
 
-
 tankas = Tankas()
 priesas = tankas.taikinys()
 
-
 while True:
     if tankas.pabaiga() == 0:
         break
@@ -111,6 +111,3 @@
             break
         case _:
             print("Klaidinga įvestis. Bandyk dar kartą!")
-
-
-# Git testas
Index: .idea/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/.gitignore b/.idea/.gitignore
new file mode 100644
--- /dev/null	(date 1675680300009)
+++ b/.idea/.gitignore	(date 1675680300009)
@@ -0,0 +1,3 @@
+# Default ignored files
+/shelf/
+/workspace.xml
Index: ../Django_autoservisas/mysite/mysite/settings.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"\"\"\r\nDjango settings for mysite project.\r\n\r\nGenerated by 'django-admin startproject' using Django 4.1.5.\r\n\r\nFor more information on this file, see\r\nhttps://docs.djangoproject.com/en/4.1/topics/settings/\r\n\r\nFor the full list of settings and their values, see\r\nhttps://docs.djangoproject.com/en/4.1/ref/settings/\r\n\"\"\"\r\n\r\nfrom pathlib import Path\r\n\r\n# Build paths inside the project like this: BASE_DIR / 'subdir'.\r\nBASE_DIR = Path(__file__).resolve().parent.parent\r\n\r\n\r\n# Quick-start development settings - unsuitable for production\r\n# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/\r\n\r\n# SECURITY WARNING: keep the secret key used in production secret!\r\nSECRET_KEY = 'django-insecure-pz0_#gp9f)h%%fm1a=2ioe296s)u%*^)-xyuu%isvd34h^94sn'\r\n\r\n# SECURITY WARNING: don't run with debug turned on in production!\r\nDEBUG = True\r\n\r\nALLOWED_HOSTS = []\r\n\r\n\r\n# Application definition\r\n\r\nINSTALLED_APPS = [\r\n    'library',\r\n    'django.contrib.admin',\r\n    'django.contrib.auth',\r\n    'django.contrib.contenttypes',\r\n    'django.contrib.sessions',\r\n    'django.contrib.messages',\r\n    'django.contrib.staticfiles',\r\n]\r\n\r\nMIDDLEWARE = [\r\n    'django.middleware.security.SecurityMiddleware',\r\n    'django.contrib.sessions.middleware.SessionMiddleware',\r\n    'django.middleware.common.CommonMiddleware',\r\n    'django.middleware.csrf.CsrfViewMiddleware',\r\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\r\n    'django.contrib.messages.middleware.MessageMiddleware',\r\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\r\n]\r\n\r\nROOT_URLCONF = 'mysite.urls'\r\n\r\nTEMPLATES = [\r\n    {\r\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\r\n        'DIRS': [],\r\n        'APP_DIRS': True,\r\n        'OPTIONS': {\r\n            'context_processors': [\r\n                'django.template.context_processors.debug',\r\n                'django.template.context_processors.request',\r\n                'django.contrib.auth.context_processors.auth',\r\n                'django.contrib.messages.context_processors.messages',\r\n            ],\r\n        },\r\n    },\r\n]\r\n\r\nWSGI_APPLICATION = 'mysite.wsgi.application'\r\n\r\n\r\n# Database\r\n# https://docs.djangoproject.com/en/4.1/ref/settings/#databases\r\n\r\nDATABASES = {\r\n    'default': {\r\n        'ENGINE': 'django.db.backends.sqlite3',\r\n        'NAME': BASE_DIR / 'db.sqlite3',\r\n    }\r\n}\r\n\r\n\r\n# Password validation\r\n# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators\r\n\r\nAUTH_PASSWORD_VALIDATORS = [\r\n    {\r\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\r\n    },\r\n    {\r\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\r\n    },\r\n    {\r\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\r\n    },\r\n    {\r\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\r\n    },\r\n]\r\n\r\n\r\n# Internationalization\r\n# https://docs.djangoproject.com/en/4.1/topics/i18n/\r\n\r\nLANGUAGE_CODE = 'lt'\r\n\r\nTIME_ZONE = 'Europe/Helsinki'\r\n\r\nUSE_I18N = True\r\n\r\nUSE_TZ = True\r\n\r\n\r\n# Static files (CSS, JavaScript, Images)\r\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\r\n\r\nSTATIC_URL = 'static/'\r\n\r\n# Default primary key field type\r\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\r\n\r\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Django_autoservisas/mysite/mysite/settings.py b/../Django_autoservisas/mysite/mysite/settings.py
--- a/../Django_autoservisas/mysite/mysite/settings.py	(revision 0054d3196703e4e9b68e9cbc4ebdf6c12145e2cb)
+++ b/../Django_autoservisas/mysite/mysite/settings.py	(date 1673963787086)
@@ -31,7 +31,7 @@
 # Application definition
 
 INSTALLED_APPS = [
-    'library',
+    'motoservice',
     'django.contrib.admin',
     'django.contrib.auth',
     'django.contrib.contenttypes',
@@ -106,7 +106,7 @@
 
 LANGUAGE_CODE = 'lt'
 
-TIME_ZONE = 'Europe/Helsinki'
+TIME_ZONE = 'Europe/Vilnius'
 
 USE_I18N = True
 
diff --git a/../Django_autoservisas/mysite/library/urls.py b/../Django_autoservisas/mysite/motoservice/urls.py
rename from ../Django_autoservisas/mysite/library/urls.py
rename to ../Django_autoservisas/mysite/motoservice/urls.py
